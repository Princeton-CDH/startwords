/* article summary styles */

$preview-height-xs: rem(300px);  // 320px-375px
$preview-height-s:  rem(275px);  // 375px-414px
$preview-height-m:  rem(230px);  // 414px-768px
$preview-height-l:  rem(300px);  // 768px-1024px
$preview-height-xl: rem(250px);  // 1024px-

.article-summary {
    display: block;
    width: 50%;
    font-size: rem(16px);
    font-family: $font-sans;
    position: relative;

    @media (min-width: $breakpoint-m) { font-size: rem(18px); }

    a:not(.doi) { text-decoration: none; }

    p {
        margin: 0;
        line-height: rem(22px);
        max-width: rem(200px);
        position: relative;
        overflow: hidden;
        @media (min-width: $breakpoint-m) { font-size: rem(18px); }
    }

    // carefully scale paragraph sizes with custom breakpoints to achieve
    // desired text shape. here be dragons
    p,
    p::before {
        height: $preview-height-xs;
        @media (min-width: 375px) { height: $preview-height-s; }
        @media (min-width: 414px) { height: $preview-height-m; }
        @media (min-width: $breakpoint-s) { height: $preview-height-l; }
        @media (min-width: $breakpoint-m) { height: $preview-height-xl; }
    }

    .bg-text,
    .bg-text::before {
        height: calc(#{$preview-height-xs} * 1.5);
        @media (min-width: 375px) { height: calc(#{$preview-height-s} * 1.5); }
        @media (min-width: 414px) { height: calc(#{$preview-height-m} * 1.5); }
        @media (min-width: $breakpoint-s) { height: calc(#{$preview-height-l} * 1.5); }
        @media (min-width: $breakpoint-m) { height: calc(#{$preview-height-xl} * 1.5); }
    }

    h2 {
        font-family: $font-sans;
        font-weight: bold;
        font-style: italic;
        text-decoration: underline;
        margin: rem(12px) 0;

        &::after {
            position: relative;
            z-index: 1;
        }
    }

    .authors, p { font-weight: 400; }

    .authors, h2 {
        font-size: rem(18px);
        @media (min-width: $breakpoint-m) { font-size: rem(20px); }
    }

    .doi {
        display: block;
        font-weight: 300;
        margin-top: rem(10px);
        word-wrap: break-word;
    }

    // background text
    .bg-text {
        position: absolute;
        width: 48vw;
        color: rgba(224, 206, 255, 0.05);
        top: rem(-50px);
        font-size: rem(20px);
        pointer-events: none;
        @media (min-width: $breakpoint-s) { font-size: rem(30px); }
    }

    // text-shaping elements
    .bg-text::before,
    p::before {
        content: '';
        width: 100%;
    }

    // left/first preview
    &:first-of-type {
        float: left;
        text-align: left;

        .bg-text {
            text-align: left;
            right: 0;
        }

        p::before,
        .bg-text::before {
            float: right;
            shape-outside: $triangle-left;
        }
    }

    // right/second preview
    &:last-of-type {
        float: right;
        text-align: right;
        margin-top: rem(40px);

        .bg-text {
            left: 0;
        }

        p { margin-left: auto; }

        p::before,
        .bg-text::before {
            float: left;
            shape-outside: $triangle-right;
        }
    }

    // inverted portions use light purple instead of white
    &.inverted,
    .inverted & {
        @include inverted;
        color: $light-purple;

        a, a:visited {
            color: $light-purple;
        }
    }
}

/* non-featured articles in an issue have a briefer listing */
.article-short-summary {

    clear: both;
    font-size: rem(16px);
    padding-bottom: 0.75em;

    &:first-of-type {
        padding-top: 2rem;
    }

    a {
        font-weight: normal;
    }

    .tag {
        color: $light-grey;
        text-transform: uppercase;
        font-size: rem(12px);
        &::before {
            content: "#";
        }
    }

    // sequential author display with commas
    .authors {
        padding: 0;
        margin: 0;
        li, address { display: inline; }
        address::after { content: ', '; }
        li:last-child address::after { content: ''; }
    }

}