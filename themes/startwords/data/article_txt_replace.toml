# Configure regular expressions for custom article text output.
# Arguments for replaceRE, applied iteratively to .RawContent.
# Patterns with backslashes must be encapsulated within single quotes.
# Use single backslashes to escape characters. Do not use double backslashes.
# Set skip = true to skip a particular replacement.

[[args]]
pattern = "How do we represent tangible objects"
replacement = "Hugo Forum Topic 27707"
comment = "Testing a simple string replacement."
skip = true

[[args]]
pattern = '(?ms)<script.*</script>'
replacement = ""
comment = "remove script embed (multiline, . match includes newline)"

[[args]]
pattern = '(?ms)\{\{\< wrap class=\"tweet-group print-only-preview\" \>\}\}[^{]*\{\{\< \/wrap \>\}\}'
replacement = ""
comment = "remove tweet group print preview"

[[args]]
pattern = '!\[([^\]]+)\]\([^\)]+\)'
replacement = "[IMAGE: $1]"
comment = "convert markdown image"

[[args]]
pattern = '{{\<[^\>]+>}}'
replacement = ""
comment = "remove hugo shortcodes"

[[args]]
pattern = '(?m)^#+ '
replacement = ""
comment = "remove leading hashes (one or more #) from markdown headers"

[[args]]
pattern = '(?m)(<\/?[^>]+>)'
replacement = ""
comment = "remove html tags"

[[args]]
pattern = '(?m)^\[\^(\d+)\]: '
replacement = "$1. "
comment = "Convert footnote label from markdown syntax to numbered list"

[[args]]
pattern = '\[\^(\d+)\]'
replacement = '[NOTE $1]'
comment = "Convert footnote reference from markdown syntax to human readable format"


[[args]]
pattern = '\[([^\]]+)\]\(([^\)]+)\)'
replacement = "$1 [URL: $2]"
comment = "convert markdown urls into text + url reference"

[[args]]
pattern = '\*\*([^*]+)\*\*'
replacement = "$1"
comment = "remove indicators for bold text"

[[args]]
pattern = '{#[a-z-0-9]+}'
replacement = ""
comment = "remove custom anchor names (markdown syntax)"

[[args]]
pattern = '\[(.+)\]\(#.*\)'
replacement = "$1"
comment = "remove anchor links within the current document"

[[args]]
pattern = '(?ms)^\s*$(^\s*$)+'
replacement = ""
comment = "Consolidate multiple newlines"

[[args]]
pattern = '^'
replacement = "\n"
comment = "Add newline to beginning of text"